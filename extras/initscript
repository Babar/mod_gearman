#!/bin/bash
#

### BEGIN INIT INFO
# Provides:          mod_gm_worker
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/Stop the mod_gearman worker daemon
### END INIT INFO


PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=./../src/worker
NAME=mod_gm_worker
CONFIG=./worker.conf
PIDFILE=./worker.pid

function get_worker_pid {
    if [ ! -s $PIDFILE ]; then
        return;
    fi
    cat $PIDFILE
}

case "$1" in
    start)
        echo -n "Starting $NAME "
        $DAEMON -d --config=$CONFIG
        if [ $? -eq 0 ]; then
            echo "done"
        else
            echo "failed"
        fi
        ;;
    stop)
        echo -n "Stopping $NAME"
        pid=`get_worker_pid`
        if [ -z $pid ]; then
            echo ". Not running."
        else
            kill $pid
            for x in 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5; do
                echo -n "."
                ps -p $pid > /dev/null 2>&1 && sleep 1;
            done
            ps -p $pid > /dev/null 2>&1;
            if [ $? -eq 0 ]; then
                echo "done"
                exit 0;
            else
                echo "failed"
                exit 1;
            fi
        fi
        ;;
    reload|force-reload)
        echo "Reloading $NAME configuration files"
        pid=`get_worker_pid`
        if [ "$pid" != "" ]; then
            kill -HUP $pid
        fi
    ;;
    status)
        pid=`get_worker_pid`
        if [ "$pid" != "" ]; then
            ps -p $pid > /dev/null 2>&1
            if [ $? -eq 0 ]; then
                echo "$NAME is running with pid $pid"
                exit 0;
            fi
        fi
        echo "$NAME is not running"
        exit 1;
    ;;
    restart)
        $0 stop && sleep 1 && $0 start
        exit $?
        ;;
    *)
        echo "Usage: $NAME {start|stop|status|restart}"
        exit 1
        ;;
esac

exit 0
